[tool.poetry]
name = "mytardis_ingestion"
version = "0.2.0"
description = ""
authors = ["Chris Seal <c.seal@auckland.ac.nz>"]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.31.0"
backoff = "^2.2.1"
PyYAML = "^6.0"
python-decouple = "^3.8"
types-PyYAML = "^6.0.12"
pydantic = "^2.0.3"
pytz = "^2023.3"
python-dateutil = "^2.8.2"
types-pytz = "^2023.3.0.0"
types-python-dateutil = "^2.8.19.13"
python-slugify = "^8.0.1"
dependency-injector = "^4.41.0"
pydantic-settings = "^2.0.2"
validators = "^0.20.0"

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
mock = "^5.0.2"
pytest-dependency = "^0.5.1"
pylint = "^2.17.4"
interrogate = "^1.5.0"
mypy = "^1.4"
types-requests = "^2.31.0"
types-mock = "^5.0.0"
PySnooper = "^1.1.0"
responses = "^0.23.1"
pre-commit = "^3.3.3"
bandit = "^1.7.5"
pytest-cov = "^4.0.0"
genbadge = {extras = ["tests", "coverage"], version = "^1.0.6"}
click = "8.1.3"
coverage = {extras = ["toml"], version = "^7.2.7"}
pyright = "^1.1.314"
devtools = "^0.11.0"
sphinx = "^7.0.1"

[tool.poetry.group.dev.dependencies]
wily = "^1.24.0"
pytest-xdist = "^3.2.1"
types-python-slugify = "^8.0.0.2"
pytest-mock = "^3.11.1"

[tool.isort]
profile = "black"

[tool.interrogate]
ignore-init-method = true
ignore-init-module = true
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
exclude = ["tests", "docs", "build"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*", "^test$"]
verbose = 2
quiet = false
whitelist-regex = []
color = true
fail-under = 50

[tool.mypy]
mypy_path = [
	  "^src$"
	  ]
ignore_missing_imports = true
exclude = [
       "^tests/.*$",
       "^docs/.*$",
       ]
plugins = ["pydantic.mypy"]
strict = true

[tool.bandit]
exclude_dirs = [
       	     "tests",
       	     "docs",
       	     ]
skips = ['B101']

[tool.coverage.run]
omit = [
     "tests/*",
     "docs/*",
     "src/specific_implementations/*",
     "src/helpers/*"
     ]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = ["long: marks tests as long running (deselect with '-m \"not long\"')"]
